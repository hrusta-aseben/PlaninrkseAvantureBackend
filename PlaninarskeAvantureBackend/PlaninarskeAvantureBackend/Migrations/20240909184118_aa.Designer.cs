// <auto-generated />
using System;
using FIT_Api_Example.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PlaninarskeAvantureBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240909184118_aa")]
    partial class aa
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FIT_Api_Example.Helper.AutentifikacijaToken", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<string>("vrijednost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("vrijemeEvidentiranja")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("KorisnikID");

                    b.ToTable("AutentifikacijaToken");
                });

            modelBuilder.Entity("FIT_Api_Example.Modul.Data.Drzava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drzava");
                });

            modelBuilder.Entity("FIT_Api_Example.Modul.Data.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaKorisnika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TWOFA")
                        .HasColumnType("bit");

                    b.Property<bool>("isAktivan")
                        .HasColumnType("bit");

                    b.Property<bool>("jelPotvrdjen")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Camping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CampSlika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CijenaPoNoci")
                        .HasColumnType("int");

                    b.Property<string>("Kontakt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("X")
                        .HasColumnType("real");

                    b.Property<float>("Y")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Camping");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Dogadjaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrojPlaninara")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaDogadjaja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VrijemePocetka")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VrijemeZavrsetka")
                        .HasColumnType("datetime2");

                    b.Property<float>("xKordinata")
                        .HasColumnType("real");

                    b.Property<float>("yKordinata")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Dogadjaj");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.DogadjajKorisnici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DogadjajID")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DogadjajID");

                    b.HasIndex("KorisnikId");

                    b.ToTable("DogadjajKorisnici");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.DrustvoKorisnici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("PlaninarskoDrustvoID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PlaninarskoDrustvoID");

                    b.ToTable("DrustvoKorisnici");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.KorisnikFA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<bool>("isAktivan")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KorisnikFA");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.OcjenaStaze", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Komentar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Kvalitet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.Property<int>("StazaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("StazaId");

                    b.ToTable("OcjenaStaze");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Oprema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Proizvodjac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recenzija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaOpreme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Oprema");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Planina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("NajvisiVrh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisPlanine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Planina");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.PlaninarskoDrustvo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrustvoSlika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kontakt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("PlaninarskoDrustvo");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Pracenja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KorisnikUserId")
                        .HasColumnType("int");

                    b.Property<int>("KorsnikZapracenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikUserId");

                    b.HasIndex("KorsnikZapracenId");

                    b.ToTable("Pracenja");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Putopis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumObjavljivanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Putopis");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.PutopisStaze", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PutopisId")
                        .HasColumnType("int");

                    b.Property<int>("StazaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PutopisId");

                    b.HasIndex("StazaId");

                    b.ToTable("PutopisStaze");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.SigurnosniIzvjestaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumIzvjestaja")
                        .HasColumnType("datetime2");

                    b.Property<int>("DogadjajID")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ostecenja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Povreda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaIzvjestaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("x")
                        .HasColumnType("real");

                    b.Property<float>("y")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("DogadjajID");

                    b.HasIndex("KorisnikId");

                    b.ToTable("SigurnosniIzvjestaj");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.SigurnosniRizik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RizikSlika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StazaId")
                        .HasColumnType("int");

                    b.Property<string>("lokacijaRizika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opisRizika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipRizika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StazaId");

                    b.ToTable("SigurnosniRizik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Sponzor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DogadjajId")
                        .HasColumnType("int");

                    b.Property<string>("Kontakt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SponzorSlika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DogadjajId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Sponzor");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Staza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duzina")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NadmorskaVisina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Ocjena")
                        .HasColumnType("float");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlaninaId")
                        .HasColumnType("int");

                    b.Property<string>("SlikaStaze")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tezina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VrijemeKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<float>("krajX")
                        .HasColumnType("real");

                    b.Property<float>("krajY")
                        .HasColumnType("real");

                    b.Property<float>("pocetakX")
                        .HasColumnType("real");

                    b.Property<float>("pocetakY")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PlaninaId");

                    b.ToTable("Staza");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.VerifikacijskiKodovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VerifikacijskiKodovi");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Vodic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Iskustvo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kontakt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specijalizacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Vodic");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.Komentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("LikeCounter")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("TekstKomentara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PostId");

                    b.ToTable("Komentar");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.KomentarLajkovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KomentarID")
                        .HasColumnType("int");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KomentarID");

                    b.HasIndex("KorisnikId");

                    b.ToTable("KomentarLajkovi");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrojLajkova")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tezina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vrijeme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Post");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.PostLajkovi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("PostId");

                    b.ToTable("PostLajkovi");
                });

            modelBuilder.Entity("FIT_Api_Example.Helper.AutentifikacijaToken", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Camping", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Dogadjaj", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.DogadjajKorisnici", b =>
                {
                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.Dogadjaj", "Dogadjaj")
                        .WithMany()
                        .HasForeignKey("DogadjajID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dogadjaj");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.DrustvoKorisnici", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.PlaninarskoDrustvo", "PlaninarskoDrustvo")
                        .WithMany()
                        .HasForeignKey("PlaninarskoDrustvoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("PlaninarskoDrustvo");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.KorisnikFA", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.OcjenaStaze", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.Staza", "Staza")
                        .WithMany()
                        .HasForeignKey("StazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Staza");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Oprema", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Planina", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.PlaninarskoDrustvo", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "KorisnikAdmin")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorisnikAdmin");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Pracenja", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "KorisnikUser")
                        .WithMany()
                        .HasForeignKey("KorisnikUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "KorisnikZapracen")
                        .WithMany()
                        .HasForeignKey("KorsnikZapracenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorisnikUser");

                    b.Navigation("KorisnikZapracen");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Putopis", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.PutopisStaze", b =>
                {
                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.Putopis", "Putopis")
                        .WithMany()
                        .HasForeignKey("PutopisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.Staza", "Staza")
                        .WithMany()
                        .HasForeignKey("StazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Putopis");

                    b.Navigation("Staza");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.SigurnosniIzvjestaj", b =>
                {
                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.Dogadjaj", "Dogadjaj")
                        .WithMany()
                        .HasForeignKey("DogadjajID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dogadjaj");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.SigurnosniRizik", b =>
                {
                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.Staza", "Staza")
                        .WithMany()
                        .HasForeignKey("StazaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staza");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Sponzor", b =>
                {
                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.Dogadjaj", "Dogadjaj")
                        .WithMany()
                        .HasForeignKey("DogadjajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dogadjaj");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Staza", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaninarskeAvantureBackend.Models.Data.Planina", "Planina")
                        .WithMany()
                        .HasForeignKey("PlaninaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Planina");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Models.Data.Vodic", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.Komentar", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaninarskeAvantureBackend.Modul.Data.Post", "Post")
                        .WithMany("Komentari")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.KomentarLajkovi", b =>
                {
                    b.HasOne("PlaninarskeAvantureBackend.Modul.Data.Komentar", "Komentar")
                        .WithMany("Lajkovi")
                        .HasForeignKey("KomentarID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komentar");

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.Post", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.PostLajkovi", b =>
                {
                    b.HasOne("FIT_Api_Example.Modul.Data.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaninarskeAvantureBackend.Modul.Data.Post", "Post")
                        .WithMany("Lajkovi")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.Komentar", b =>
                {
                    b.Navigation("Lajkovi");
                });

            modelBuilder.Entity("PlaninarskeAvantureBackend.Modul.Data.Post", b =>
                {
                    b.Navigation("Komentari");

                    b.Navigation("Lajkovi");
                });
#pragma warning restore 612, 618
        }
    }
}
